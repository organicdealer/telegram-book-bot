import logging
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes
from apscheduler.schedulers.background import BackgroundScheduler
from parser_yakaboo import get_discounts

# üîß –ó–∞–º—ñ–Ω–∏ —Ç–æ–∫–µ–Ω —ñ chat_id –Ω–∞ —Å–≤–æ—ó
TOKEN = "8107252798:AAEu8ExotGRwZTrRZDGjaPciCgT1zG_AlW8"
CHAT_ID = "33268705"

# üîß –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ª–æ–≥—É–≤–∞–Ω–Ω—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# üì§ –ù–∞–¥—Å–∏–ª–∞–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
async def send_discounts(context: ContextTypes.DEFAULT_TYPE):
    books = get_discounts()

    if not books:
        await context.bot.send_message(chat_id=CHAT_ID, text="üì≠ –ù–æ–≤–∏—Ö –∑–Ω–∏–∂–æ–∫ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.")
        return

    # –î—Ä–æ–±–∏–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø–æ 10 –∫–Ω–∏–∂–æ–∫ (—â–æ–± –Ω–µ –ø–µ—Ä–µ–≤–∏—â–∏—Ç–∏ –æ–±–º–µ–∂–µ–Ω–Ω—è Telegram)
    chunk_size = 10
    for i in range(0, len(books), chunk_size):
        chunk = books[i:i + chunk_size]
        text = ""
        for book in chunk:
            text += (
                f"üìò <b>{book['title']}</b>\n"
                f"üí∞ <b>{book['price']}</b>\n"
                f"üîó <a href=\"{book['link']}\">–ü–µ—Ä–µ–π—Ç–∏</a>\n\n"
            )
        await context.bot.send_message(chat_id=CHAT_ID, text=text, parse_mode="HTML")

# üü¢ –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —Ä—É—á–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫—É
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("üëã –í—ñ—Ç–∞—é! –ù–∞–¥—Å–∏–ª–∞—é —Å—å–æ–≥–æ–¥–Ω—ñ—à–Ω—ñ –∑–Ω–∏–∂–∫–∏...")
    await send_discounts(context)

# üïë –ü–ª–∞–Ω—É–≤–∞–ª—å–Ω–∏–∫ –¥–ª—è —â–æ–¥–µ–Ω–Ω–æ—ó —Ä–æ–∑—Å–∏–ª–∫–∏
def daily_discount_job(application):
    scheduler = BackgroundScheduler()
    scheduler.add_job(lambda: application.create_task(send_discounts(application.bot)), 'cron', hour=9)
    scheduler.start()
    logger.info("–©–æ–¥–µ–Ω–Ω–∞ —Ä–æ–∑—Å–∏–ª–∫–∞ –∑–Ω–∏–∂–æ–∫ –∑–∞–ø–ª–∞–Ω–æ–≤–∞–Ω–∞ –Ω–∞ 09:00.")

# üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == "__main__":
    application = ApplicationBuilder().token(TOKEN).build()

    # –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ –∫–æ–º–∞–Ω–¥–∏ /start
    application.add_handler(CommandHandler("start", start))

    # –°—Ç–∞—Ä—Ç—É—î–º–æ —â–æ–¥–µ–Ω–Ω—É —Ä–æ–∑—Å–∏–ª–∫—É
    daily_discount_job(application)

    logger.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω–æ...")
    application.run_polling()
